<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Disk extends \App\Entity\Disk implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'artist', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'production', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'published', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'style', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'stock', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'registered', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'img', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'barcode', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'curator'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'artist', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'production', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'published', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'style', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'stock', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'registered', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'img', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'barcode', '' . "\0" . 'App\\Entity\\Disk' . "\0" . 'curator'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Disk $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtist(): ?\App\Entity\Artist
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtist', []);

        return parent::getArtist();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtist(?\App\Entity\Artist $artist): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtist', [$artist]);

        return parent::setArtist($artist);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduction(): ?\App\Entity\Production
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduction', []);

        return parent::getProduction();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduction(?\App\Entity\Production $production): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduction', [$production]);

        return parent::setProduction($production);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', []);

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished(\DateTimeInterface $published): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getStyle(): ?\App\Entity\Style
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStyle', []);

        return parent::getStyle();
    }

    /**
     * {@inheritDoc}
     */
    public function setStyle(?\App\Entity\Style $style): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStyle', [$style]);

        return parent::setStyle($style);
    }

    /**
     * {@inheritDoc}
     */
    public function getStock(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStock', []);

        return parent::getStock();
    }

    /**
     * {@inheritDoc}
     */
    public function setStock(int $stock): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStock', [$stock]);

        return parent::setStock($stock);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistered(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistered', []);

        return parent::getRegistered();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistered(\DateTimeInterface $registered): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistered', [$registered]);

        return parent::setRegistered($registered);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', []);

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg(?string $img): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', [$img]);

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getBarcode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBarcode', []);

        return parent::getBarcode();
    }

    /**
     * {@inheritDoc}
     */
    public function setBarcode(string $barcode): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBarcode', [$barcode]);

        return parent::setBarcode($barcode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurator(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurator', []);

        return parent::getCurator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurator(?\App\Entity\User $curator): \App\Entity\Disk
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurator', [$curator]);

        return parent::setCurator($curator);
    }

}
